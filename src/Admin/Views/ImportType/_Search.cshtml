@model Admin.Models.ImportType.SearchCriteria

@using (Html.BeginForm("Search", "ImportType", FormMethod.Get))
{

<div>

    <div class="row">

        <div class="col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2">
            @Html.LabelFor(m => m.DataType, new { @class = "form-label" })
            <select id="DataType" name="DataType">
                <option value="">None</option>
                @foreach (var item in Model.ImportTypes.Items)
                {
                    <option class="item" value="@item.Value" @(Model.DataType.Equals(item.Value) ? "selected" : String.Empty)>@item.Text</option>
                }
            </select>
        </div>
        <div class="col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 pt-2 pt-sm-0">
            @Html.LabelFor(m => m.Name, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", size = 50, placeholder = "Enter name" })
        </div>
        <div class="col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 pt-2 pt-md-0">
            @Html.LabelFor(m => m.ExternalReference, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.ExternalReference, new { @class = "form-control", size = 50, placeholder = "Enter external reference" })
        </div>
        <div class="col-12 col-sm-6 col-md-4 col-xxl-6 pt-3 offset-md-8 offset-xxl-0 gap-2 d-flex align-self-end justify-content-end">
            <button class="btn btn-primary search" tabindex="0" type="submit">Search</button>
            <a href="@Url.Action("Search", "ImportType")" class="btn btn-secondary" id="reset">Reset search</a>
        </div>
    </div>
</div>

}