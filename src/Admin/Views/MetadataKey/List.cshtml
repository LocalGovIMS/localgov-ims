@using PagedList.Mvc


@model Admin.Models.MetadataKey.ListViewModel
@{
    ViewBag.Title = "Metadata keys";
}

@section Header { Metadata keys }

@section Subheader { Metadata key management }

@section Actions {
    @Html.ActionLink("Create metadata key", "Create", new { }, new { @class = "btn btn-secondary" })
}

<h3 class="visually-hidden">Search criteria</h3>

<div class="border border-1 rounded p-2">
    @Html.Partial("_Search", Model.SearchCriteria)
</div>

<h3 class="visually-hidden">Search results</h3>

@if (Model.Items != null && Model.Items.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover mt-2">
            <thead>
                <tr>
                    <th scope="col">
                        Name
                    </th>
                    <th scope="col">
                        Description
                    </th>
                    <th scope="col">
                        Is a system type
                    </th>
                    <th scope="col">
                        Entity type
                    </th>
                    <th scope="col">
                        <span class="visually-hidden">Actions</span>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items.OrderBy(x => x.Name))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.Description)
                        </td>
                        <td>
                            @item.SystemType.ToYesNoString()
                        </td>
                        <td>
                            @(((MetadataKeyEntityType)item.EntityType).GetDisplayName())
                        </td>
                        <td class="text-end">
                            @Html.ActionLink("View", "Details", new { id = item.Id }, new { @class = "btn btn-secondary" })
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-secondary" })
                            @if (!item.SystemType)
                            {
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-secondary delete-action" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="5">
                        @if (Model.Pages > 1)
                        {
                            @Html.PagedListPager(Model.Items, page => Url.Action("Search", new
                            {
                                page = page,
                                name = Model.SearchCriteria.Name,
                                entityType = Model.SearchCriteria.EntityType,
                            }))
                        }
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
}
else
{
    Html.RenderPartial("_NothingSpecified", "metadata keys");
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            accessibleAutocomplete.enhanceSelectElement({
                displayMenu: 'overlay',
                autoSelect: false,
                confirmOnBlur: false,
                showAllValues: true,
                defaultValue: '',
                preserveNullOptions: true,
                placeholder: 'Select entity type',
                dropdownArrow: () => paymentsAdmin.controls.autocomplete.downarrow,
                selectElement: document.querySelector('#EntityType')
            });

        });

        $(document).ready(function () {

            $(".delete-action").on("click",
                function (e) {
                    if (window.confirm("Are you sure you want to delete this metadata key?")) {

                    } else {
                        e.preventDefault();
                        e.stopPropogation();
                        return false;
                    }
                });

        });
    </script>
}

