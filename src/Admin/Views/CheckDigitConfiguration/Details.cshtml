@model Admin.Models.CheckDigitConfiguration.DetailsViewModel
@{
    ViewBag.Title = "Check digit configuration";
}

@section Header {
    <h1 class="ui header">
        @Model.Name
        @Html.ActionLink("Edit check digit configuration", "Edit", new { id = Model.Id }, new { @class = "ui blue button right floated" })
        <div class="sub header">
            Check digit configuration details
        </div>
    </h1>
}

<div class="ui form">

    @Html.HiddenFor(m => m.Id)

    <div class="ui vertical segment">
        <div class="four wide field">
            @Html.LabelFor(m => m.Name)
            @Html.DisplayFor(m => m.Name)
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Type)
            @Html.DisplayFor(m => m.Type)
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Modulus)
            @Html.DisplayFor(m => m.Modulus)
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.SourceSubstitutions))
        {
            <div class="four wide field">
                @Html.LabelFor(m => m.SourceSubstitutions)
                @Html.DisplayFor(m => m.SourceSubstitutions)
            </div>
        }

        @if (!string.IsNullOrWhiteSpace(Model.ResultSubstitutions))
        {
            <div class="four wide field">
                @Html.LabelFor(m => m.ResultSubstitutions)
                @Html.DisplayFor(m => m.ResultSubstitutions)
            </div>
        }

        <div class="four wide field">
            @Html.LabelFor(m => m.Weightings)
            @Html.DisplayFor(m => m.Weightings)
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.ApplySubtraction)
            @Html.DisplayFor(m => m.ApplySubtraction)
        </div>
    </div>

    <br />
    @Html.ActionLink("Back", "Back", "CheckDigitConfiguration", null, new { @class = "ui button" })

</div>
