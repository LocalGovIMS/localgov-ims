@using BusinessLogic.Extensions
@using BusinessLogic.Enums
@model Admin.Models.EReturn.EditViewModel
@{
    ViewBag.Title = "Edit eReturn";
}

@section Header {
    <h1 class="ui header">
        @Model.EReturn.EReturn.EReturnNo
        <div class="sub header">
            View / edit eReturn information
        </div>
    </h1>
}

@section Messages {
    <div>
        @if (Model.Message != null)
        {
            <div class="ui @Model.Message.Type message" style="margin: -1rem 0 2rem">
                <div class="header">
                    @Model.Message.Title
                </div>
                <p>@Model.Message.Text</p>
            </div>
        }
    </div>
}

@Html.Partial("_Header")

@using (Html.BeginForm("Approve", "EReturn", FormMethod.Post))
{

    <div class="ui fluid two item menu">
        <a class="active item" data-tab="ereturn-tab">
            eReturn Details<br />
            <div class="ui massive label transaction-total">£@Model.EReturn.Amount.ToTwoDecimalPlaces()</div>
        </a>
        <a class="item" data-tab="analysis-tab">
            @((EReturnType)Model.EReturn.EReturn.TypeId == EReturnType.Cash ? "Cash analysis" : "Cheque analysis")
            <br />
            <div class="ui massive label analysis-total">
                £@((EReturnType)Model.EReturn.EReturn.TypeId == EReturnType.Cash ? Model.Cash.Total.ToTwoDecimalPlaces() : Model.Cheques.Sum(x => x.Amount).ToTwoDecimalPlaces())
            </div>
        </a>
    </div>

    @Html.HiddenFor(m => m.EReturn.EReturn.Id)
    @Html.HiddenFor(m => m.EReturn.EReturn.TypeId)

    <div class="ui form">
        <div class="ui active tab" data-tab="ereturn-tab">
            <table class="ui table">
                <thead>
                    <tr>
                        <th scope="col">Reference</th>
                        <th scope="col">Description</th>
                        <th scope="col">Amount</th>
                        <th scope="col">VAT code</th>
                    </tr>
                </thead>
                <tbody id="template-rows">
                    @if (Model.Transactions.Any())
                    {
                        for (int i = 0; i < Model.Transactions.Count; i++)
                        {
                            @Html.HiddenFor(m => m.Transactions[i].Id)
                            @Html.HiddenFor(m => m.Transactions[i].TemplateRowId)
                            <tr>
                                <td>
                                    @Model.Transactions[i].Reference
                                </td>
                                <td>
                                    @Model.Transactions[i].Description
                                    @Html.HiddenFor(m => m.Transactions[i].Description)
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.Transactions[i].Amount, "{0:F2}", new { @class = "transaction-value", @maxlength = "18" })
                                </td>
                                <td>
                                    @Model.Transactions[i].VatCode
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        @if ((EReturnType)Model.EReturn.EReturn.TypeId == EReturnType.Cash)
        {
            @Html.HiddenFor(m => m.Cash.Id)
            <div class="ui tab" data-tab="analysis-tab">
                <table class="ui table">
                    <thead>
                        <tr>
                            <th scope="col">Denomination</th>
                            <th scope="col">Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Bag number</td>
                            <td>@Html.DisplayFor(m => m.Cash.BagNumber)</td>
                        </tr>
                        <tr>
                            <td>£50</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds50, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "50", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>£20</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds20, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "20", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>£10</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds10, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "10", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>£5</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds5, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "5", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>£2</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds2, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "2", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>£1</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pounds1, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "1", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>50p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence50, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.50", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>20p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence20, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.20", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>10p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence10, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.10", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>5p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence5, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.05", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>2p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence2, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.02", @maxlength = "18" })</td>
                        </tr>
                        <tr>
                            <td>1p</td>
                            <td>@Html.TextBoxFor(m => m.Cash.Pence1, "{0:F2}", new { @class = "analysis-value monetary-amount", @data_step = "0.01", @maxlength = "18" })</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }

        @if ((EReturnType)Model.EReturn.EReturn.TypeId == EReturnType.Cheque)
        {
            <div class="ui tab" data-tab="analysis-tab">
                <table class="ui table">
                    <thead>
                        <tr>
                            <th scope="col">Name on cheque</th>
                            <th scope="col">Value</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id="cheque-rows">
                        @for (int i = 0; i < Model.Cheques.Count; i++)
                        {
                            <tr>
                                <td>@Html.TextBoxFor(m => m.Cheques[i].Name, new { @maxlength = "25" })</td>
                                <td>@Html.TextBoxFor(m => m.Cheques[i].Amount, "{0:F2}", new { @class = "analysis-value monetary-amount", @maxlength = "18" })</td>
                                <td>
                                    <a class="ui red icon button remove-cheque" data-remove="@i">
                                        <i class="ui delete icon"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th scope="col" colspan="3">
                                <a id="add-row" class="ui button blue add-cheque">Add row</a>
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }

        <div class="page-actions--footer">
            <div class="field">
                @Html.ActionLink("Back", "Back", "EReturn", null, new { @class = "ui large button" })
            </div>
        </div>
    </div>

    <div class="page-actions">
        <button type="submit" value="Approve" name="action" class="ui right floated primary labeled icon button submit-button"><i class="ui save icon"></i> Save</button>
        @if (User.IsInRole(Role.EReturnDelete))
        {
            @Html.ActionLink("Delete", "Delete", "EReturn", new { id = Model.EReturn.EReturn.Id }, new { @class = "ui right floated red button delete-ereturn" })
        }
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/app/ereturn")
}