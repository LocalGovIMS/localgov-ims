@model Admin.Models.AccountHolder.SearchViewModel

@using (Html.BeginForm("Search", "AccountHolder", FormMethod.Get))
{
    @Html.HiddenFor(x => x.FundCode, new { size = 4 })

    <div class="ui small text stackable six item menu">
        <div class="item">
            <div class="ui labeled icon blue input">
                <label class="ui blue label">@Html.DisplayNameFor(m => m.AccountReference)</label>                            
                    @Html.TextBoxFor(m => m.AccountReference)                
            </div>
        </div>

        
        <div class="item">
            <div class="ui labeled input">
                <label class="ui blue label">@Html.DisplayNameFor(m => m.PostCode)</label>                        
                @Html.TextBoxFor(m => m.PostCode)
            </div>
        </div>

        <div class="item">
            <div class="ui labeled input">
                <label class="ui blue label">@Html.DisplayNameFor(m => m.HouseNumberName)</label>                
                @Html.TextBoxFor(m => m.HouseNumberName)
            </div>
        </div>
        
        <div class="item">
            <div class="ui labeled input">
                <label class="ui blue label">@Html.DisplayNameFor(m => m.Street)</label>                
                @Html.TextBoxFor(m => m.Street)
            </div>
        </div>

        <div class="item">
            <div class="ui labeled input">
                <label class="ui blue label">@Html.DisplayNameFor(m => m.Surname)</label>
                @Html.TextBoxFor(m => m.Surname)
            </div>
        </div>


        <div class="item">
            <button class="ui icon black button" tabindex="0" type="submit">
                <i class="search icon"></i>
            </button>
            &nbsp;
            <div class="ui icon black button reset" tabindex="1" onclick="location.href='@Url.Action("Back", "AccountHolder")'">
                <i class="remove circle icon reset"></i>
            </div>
        </div>
    </div>
}