@model Admin.Models.AccountHolder.DetailsViewModel
@{
    ViewBag.Title = "Account holder details";
}

@section Header {
    <h1 class="ui header">
        @Model.AccountReference
        @if (Model.ShowSelect)
        {
            @Html.ActionLink("Select", "SelectAccountReference", "Payment", new { id = Model.AccountReference }, new { @class = "ui green button right floated" })
        }
        @Html.ActionLink("Edit", "Edit", new { id = Model.AccountReference }, new { @class = "ui blue button right floated" })
        <div class="sub header">
            Account holder details
        </div>
    </h1>
}

<div class="ui form">

    @Html.HiddenFor(m => m.AccountReference)

    <div class="five wide field">
        @Html.LabelFor(m => m.Title)
        @Html.DisplayFor(m => m.Title)
    </div>

    <div class="five wide field">
        @Html.LabelFor(m => m.Forename)
        @Html.DisplayFor(m => m.Forename)
    </div>

    <div class="five wide field">
        @Html.LabelFor(m => m.Surname)
        @Html.DisplayFor(m => m.Surname)
    </div>

    <div class="five wide field">
        @Html.LabelFor(m => m.Address)
        @Html.DisplayFor(m => m.Address)
    </div>

    <div class="five wide field">
        @Html.LabelFor(m => m.Postcode)
        @Html.DisplayFor(m => m.Postcode)
    </div>

    @if (!string.IsNullOrEmpty(Model.FundName))
    {
        <div class="five wide field">
            @Html.LabelFor(m => m.FundName)
            @Html.DisplayFor(m => m.FundName)
        </div>
    }

    @if (Model.FundMessageId.HasValue)
    {
        <div class="five wide field">
            @Html.LabelFor(m => m.FundMessage)
            @Html.DisplayFor(m => m.FundMessage)
        </div>
    }

    @if (Model.PeriodDebit.HasValue)
    {
        <div class="four wide field">
            @Html.LabelFor(m => m.PeriodDebit)
            @Html.DisplayFor(m => m.PeriodDebit)
        </div>
    }

    @if (Model.PeriodCredit.HasValue)
    {
        <div class="four wide field">
            @Html.LabelFor(m => m.PeriodCredit)
            @Html.DisplayFor(m => m.PeriodCredit)
        </div>
    }

    @if (Model.CurrentBalance.HasValue)
    {
        <div class="four wide field">
            @Html.LabelFor(m => m.CurrentBalance)
            @Html.DisplayFor(m => m.CurrentBalance)
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.UserFieldsFormatted))
    {
        <div class="four wide field">
            @Html.LabelFor(m => m.UserFieldsFormatted)
            @Html.DisplayFor(m => m.UserFieldsFormatted)
        </div>
    }

    <div class="four wide field">
        @Html.LabelFor(m => m.CreatedAt)
        @Html.DisplayFor(m => m.CreatedAt)
    </div>

    <div class="four wide field">
        @Html.LabelFor(m => m.CreatedByUsername)
        @Html.DisplayFor(m => m.CreatedByUsername)
    </div>

    @if (Model.UpdatedAt.HasValue)
    {
        <div class="four wide field">
            @Html.LabelFor(m => m.UpdatedAt)
            @Html.DisplayFor(m => m.UpdatedAt)
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.UpdatedByUsername)
            @Html.DisplayFor(m => m.UpdatedByUsername)
        </div>
    }

    @Html.ActionLink("Back", "Back", "Fund", null, new { @class = "ui button" })

</div>


