@model Admin.Models.AccountHolder.EditViewModel
@{
    ViewBag.Title = "Create account holder";
}

@section Messages {
    @if (TempData.ContainsKey("Message") && TempData["Message"] != null) { Html.RenderPartial("_Message", TempData["Message"]); }
}

@section Header {
    <h1 class="ui header">
        Create account holder
        <div class="sub header">
            Account holder details
        </div>
    </h1>
}

@using (Html.BeginForm("Create", "AccountHolder", FormMethod.Post))
{
    <div class="ui form">

        <div class="four wide field">
            @Html.LabelFor(m => m.AccountReference)
            @Html.EditorFor(m => m.AccountReference)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AccountReference)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Title)
            @Html.EditorFor(m => m.Title)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.Title)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Forename)
            @Html.EditorFor(m => m.Forename)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.Forename)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Surname)
            @Html.EditorFor(m => m.Surname)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.Surname)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AddressLine1)
            @Html.EditorFor(m => m.AddressLine1)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AddressLine1)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AddressLine2)
            @Html.EditorFor(m => m.AddressLine2)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AddressLine2)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AddressLine3)
            @Html.EditorFor(m => m.AddressLine3)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AddressLine3)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AddressLine4)
            @Html.EditorFor(m => m.AddressLine4)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AddressLine4)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.Postcode)
            @Html.EditorFor(m => m.Postcode)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.Postcode)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.FundCode)
            <div class="ui selection dropdown fund-dropdown">
                @Html.HiddenFor(x => x.FundCode, new { size = 4 })
                <i class="dropdown icon"></i>
                <div class="default text no-overflow">Select fund type</div>
                <div class="menu">
                    @foreach (var item in Model.Funds.Items)
                    {
                        <div class="item" data-value="@item.Value">
                            @item.Text
                        </div>
                    }
                </div>
            </div>
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.FundCode)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.StopMessageId)
            <div class="ui selection dropdown stop-message-dropdown">
                @Html.HiddenFor(x => x.StopMessageId, new { size = 4 })
                <i class="dropdown icon"></i>
                <div class="default text no-overflow">Select stop message type</div>
                <div class="menu">
                    @foreach (var item in Model.StopMessages.Items)
                    {
                        <div class="item"
                             data-fund-code="@item.DataAttributes.First(x => x.Key == "fundCode").Value">
                            @item.Text
                        </div>
                    }
                </div>
            </div>
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.StopMessageId)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.PeriodDebit)
            @Html.EditorFor(m => m.PeriodDebit)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.PeriodDebit)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.PeriodDebit)
            @Html.EditorFor(m => m.PeriodDebit)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.PeriodDebit)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.CurrentBalance)
            @Html.EditorFor(m => m.CurrentBalance)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.CurrentBalance)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.UserField1)
            @Html.EditorFor(m => m.UserField1)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.UserField1)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.UserField2)
            @Html.EditorFor(m => m.UserField2)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.UserField2)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.UserField3)
            @Html.EditorFor(m => m.UserField3)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.UserField3)
            </div>
        </div>

        <div>
            <input type="submit" value="Save" class="ui primary button" />
            @Html.ActionLink("Back", "Back", "AccountHolder", null, new { @class = "ui button" })
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/app/account-holders")
}
