@model Admin.Models.Fund.EditViewModel
@{
    ViewBag.Title = "Edit fund";
}

@section Messages {
    @if (TempData.ContainsKey("Message") && TempData["Message"] != null) { Html.RenderPartial("_Message", TempData["Message"]); }
}

@section Header {
    <h1 class="ui header">
        @Model.DisplayName
        <div class="sub header">
            Fund details
        </div>
    </h1>
}

@using (Html.BeginForm("Edit", "Fund", FormMethod.Post))
{

    @Html.HiddenFor(m => m.FundCode)

    <div class="ui form">

        <div class="four wide field">
            @Html.LabelFor(m => m.FundName)
            @Html.EditorFor(m => m.FundName)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.FundName)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.DisplayName)
            @Html.EditorFor(m => m.DisplayName)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.DisplayName)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AccountReferenceValidatorId)
            <div class="ui selection dropdown account-reference-validator-dropdown">
                @Html.HiddenFor(x => x.AccountReferenceValidatorId, new { size = 4 })
                <i class="dropdown icon"></i>
                <div class="default text no-overflow">Select account refernce validator code</div>
                <div class="menu">
                    @foreach (var item in Model.AccountReferenceValidators.Items)
                    {
                        <div class="item" data-value="@item.Value">
                            @item.Text
                        </div>
                    }
                </div>
            </div>
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AccountReferenceValidators)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.VatCode)
            <div class="ui selection dropdown vat-dropdown">
                @Html.HiddenFor(x => x.VatCode, new { size = 4 })
                <i class="dropdown icon"></i>
                <div class="default text no-overflow">Select VAT code</div>
                <div class="menu">
                    @foreach (var item in Model.VatCodes.Items)
                    {
                        <div class="item" data-value="@item.Value">
                            @item.Text
                        </div>
                    }
                </div>
            </div>
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.VatCode)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.MaximumAmount)
            @Html.EditorFor(m => m.MaximumAmount)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.MaximumAmount)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.OverPayAccount)
            @Html.EditorFor(m => m.OverPayAccount)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.OverPayAccount)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AccountExist)
            @Html.EditorFor(m => m.AccountExist)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AccountExist)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.AquireAddress)
            @Html.EditorFor(m => m.AquireAddress)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.AquireAddress)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.VatOverride)
            @Html.EditorFor(m => m.VatOverride)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.VatOverride)
            </div>
        </div>

        <div class="four wide field">
            @Html.LabelFor(m => m.IsDisabled)
            @Html.CheckBoxFor(m => m.IsDisabled)
            <div class="form__element--error">
                @Html.ValidationMessageFor(m => m.IsDisabled)
            </div>
        </div>

    </div>

    <div class="ui vertical segment">
        <h2 style="padding-bottom:10px;">
            Metadata
            @Html.ActionLink("Add metadata", "Create", "FundMetadata", new { fundCode = Model.FundCode }, new { @class = "ui blue button right floated" })
        </h2>
        @Html.Action("_EditListForFund", "FundMetadata", new { fundCode = Model.FundCode })

    </div>

    <br />

    <input type="submit" value="Save" class="ui primary button" />
    @Html.ActionLink("Back", "Back", "Fund", null, new { @class = "ui button" })

}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.account-reference-validator-dropdown').dropdown();
            $('.vat-dropdown').dropdown();
        });
    </script>
}
